#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 3 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        kakko: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_8) &kp LS(NUMBER_9) &kp LEFT>;
            label = "NEW_MACRO";
        };

        kagi_kakko: kagi_kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET &kp LEFT>;
            label = "KAGI_KAKKO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R        &kp T                                        &kp Y        &kp U    &kp I     &kp O     &kp P
&kp A           &kp S         &kp D         &kp F        &kp G        &trans         &trans           &kp H        &lt 3 J  &kp K     &kp L     &kp MINUS
&mt LCTRL Z     &kp X         &kp C         &kp V        &kp B        &mo 4          &to 5            &kp N        &kp M    &mkp MB1  &mkp MB2  &mt RCTRL LS(SEMICOLON)
&kp LEFT_SHIFT  &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 LANG2  &lt 2 SPACE  &lt 1 LANG1    &lt 1 BACKSPACE  &lt 2 ENTER                               &mt LEFT_SHIFT SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp F1          &kp F2  &kp F3  &kp F4  &kp F5                        &trans            &trans    &kp UP    &kp LG(TAB)  &kp LG(D)
&kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &trans      &trans   &kp LS(NUMBER_7)  &kp LEFT  &kp DOWN  &kp RIGHT    &trans
&trans          &trans  &trans  &trans  &trans   &trans      &trans   &kp LS(NUMBER_6)  &mkp MB3  &mkp MB1  &mkp MB2     &kp RCTRL
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans   &kp BSPC    &kp DEL  &trans                                             &kp ESC
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp TAB          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMLOCK                                   &kp EXCLAMATION   &kagi_kakko       &trans     &kp DOLLAR  &kp PERCENT
&kp COLON        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DIVIDE   &trans           &kp UNDERSCORE  &kp LS(NUMBER_6)  &kakko            &trans     &kp INT3    &kp NON_US_BACKSLASH
&kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MINUS    &trans           &trans          &kp QMARK         &kp LS(NUMBER_2)  &kp COMMA  &kp PERIOD  &kp LEFT_BRACKET
&kp LEFT_SHIFT   &kp KP_EQUAL     &kp KP_DOT       &trans           &trans          &kp BACKSPACE    &kp DELETE      &trans                                                     &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp LG(LEFT)    &kp LG(RIGHT)  &kp LA(LEFT)        &kp LA(RIGHT)  &kp LS(LG(S))                            &kp PAGE_UP    &kp HOME  &kp UP_ARROW    &kp LG(TAB)  &kp LG(D)
&kp LA(O)       &kp N          &kp LA(F4)          &kp LC(F)      &mmv MOVE_UP   &trans           &trans   &kp PAGE_DOWN  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT    &trans
&kp LC(Z)       &kp LC(X)      &kp LC(C)           &kp LC(V)      &trans         &trans           &trans   &kp END        &mkp MB3  &mkp MB1        &mkp MB2     &kp LCTRL
&kp LEFT_SHIFT  &kp LG(L)      &kp LA(LC(DELETE))  &trans         &trans         &kp BACKSPACE    &kp DEL  &trans                                                &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(N0)            &kp LS(MINUS)      &kp MINUS                 &kp CARET                               &kp SEMICOLON  &kp SEMICOLON  &kp RIGHT_BRACKET  &kp LS(RIGHT_BRACKET)  &trans
&kp CARET         &kp NON_US_BACKSLASH  &kp BACKSLASH      &kp LS(NON_US_BACKSLASH)  &kp LS(BSLH)   &trans    &kp LS(COMMA)  &kp LS(DOT)    &kp SLASH      &kp LS(SLASH)      &kp NON_US_BACKSLASH   &trans
&kp AT_SIGN       &kp LS(AT_SIGN)       &kp LEFT_BRACKET   &kp LS(LEFT_BRACKET)      &kp LBKT       &trans    &trans         &trans         &trans         &trans             &trans                 &trans
&kp LS(LBKT)      &kp SEMICOLON         &kp LS(SEMICOLON)  &kp COLON                 &kp LA(COLON)  &trans    &trans         &trans                                                                  &trans
            >;
        };
    };
};
